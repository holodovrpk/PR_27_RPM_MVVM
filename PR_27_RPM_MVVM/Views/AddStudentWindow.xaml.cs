// -----------------------------------------------------------------------------
// Подключаем пространство имён, где находится класс Student.
// Это нужно, чтобы иметь возможность работать с объектом Student в коде окна.
using PR_27_RPM_MVVM.Models;

// -----------------------------------------------------------------------------
// Подключаем стандартные пространства имён WPF и .NET Framework.
// -----------------------------------------------------------------------------
using System;                       // Базовые типы и классы .NET (int, string, EventArgs и т.д.)
using System.Collections.Generic;   // Для коллекций (на будущее)
using System.Linq;                  // Для LINQ (не используется здесь напрямую)
using System.Text;                  // Для работы со строками
using System.Threading.Tasks;       // Для асинхронных операций (не используется здесь)
using System.Windows;               // Главное пространство имён WPF (окна, события, визуальные элементы)
using System.Windows.Controls;      // Элементы управления (Button, TextBox, Grid и т.д.)
using System.Windows.Data;          // Механизм привязки данных (Binding)
using System.Windows.Documents;     // Работа с текстовыми документами (FlowDocument, RichTextBox)
using System.Windows.Input;         // Обработка ввода (клавиатура, мышь, команды)
using System.Windows.Media;         // Работа с графикой и цветами
using System.Windows.Media.Imaging; // Работа с изображениями (ImageSource, BitmapImage)
using System.Windows.Shapes;        // Работа с фигурами (Rectangle, Ellipse и т.п.)

// -----------------------------------------------------------------------------
// Пространство имён для всех окон (Views) в приложении.
// По соглашению, каждая View (окно) живёт в отдельном файле в этой папке.
// -----------------------------------------------------------------------------
namespace PR_27_RPM_MVVM.Views
{
    /// <summary>
    /// Класс AddStudentWindow — код-бихайнд (code-behind) для окна добавления студента.
    /// Он наследуется от Window, значит, это полноценное окно WPF.
    /// </summary>
    public partial class AddStudentWindow : Window
    {
        // ---------------------------------------------------------------------
        // КОНСТРУКТОР ОКНА
        // ---------------------------------------------------------------------
        // Конструктор вызывается при создании экземпляра окна из ViewModel.
        // Например: new AddStudentWindow() { DataContext = newStudent };
        //
        // Внутри конструктора вызывается InitializeComponent(),
        // который создаёт и инициализирует все визуальные элементы окна,
        // описанные в AddStudentWindow.xaml (текстовые поля, кнопки и т.д.).
        public AddStudentWindow()
        {
            InitializeComponent(); // ← загружает XAML-разметку и "связывает" её с этим файлом
        }

        // ---------------------------------------------------------------------
        // ОБРАБОТЧИК КНОПКИ "ОК"
        // ---------------------------------------------------------------------
        // Этот метод выполняется, когда пользователь нажимает кнопку "ОК" в окне.
        //
        // sender — ссылка на объект, который вызвал событие (в данном случае Button),
        // e — объект с дополнительной информацией о событии (обычно не используется).
        //
        // Установка DialogResult = true означает:
        //  - окно закрывается;
        //  - метод ShowDialog() в вызывающем коде вернёт true.
        //
        // Это используется в ViewModel для проверки:
        // if (addWindow.ShowDialog() == true) → значит, пользователь подтвердил ввод данных.
        private void OkButton_Click(object sender, RoutedEventArgs e)
        {
            DialogResult = true;
        }

        // ---------------------------------------------------------------------
        // ОБРАБОТЧИК КНОПКИ "ОТМЕНА"
        // ---------------------------------------------------------------------
        // Этот метод выполняется при нажатии кнопки "Отмена".
        // Установка DialogResult = false закрывает окно и сигнализирует,
        // что пользователь отменил добавление студента.
        //
        // ViewModel не добавит объект в коллекцию, если окно вернуло false.
        private void CancelButton_Click(object sender, RoutedEventArgs e)
        {
            DialogResult = false;
        }
    }
}
